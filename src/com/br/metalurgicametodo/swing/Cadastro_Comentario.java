/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.br.metalurgicametodo.swing;

import com.br.metalurgicametodo.dao.AtendimentoDAO;
import com.br.metalurgicametodo.dao.PessoaFisicaDAO;
import com.br.metalurgicametodo.dao.PessoaJuridicaDAO;
import com.br.metalurgicametodo.entidades.Atendimento;
import com.br.metalurgicametodo.entidades.PessoaFisica;
import com.br.metalurgicametodo.entidades.PessoaJuridica;
import com.br.metalurgicametodo.entidades.Venda;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Dimension;


import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author rds_d
 */
// Classe responsavel por cadastrar chamado
public class Cadastro_Comentario extends javax.swing.JInternalFrame {

    /**
     * Creates new form Cadastro_Comentario
     */
    public Cadastro_Comentario() {
        initComponents();
        txt_Protocolo.setBackground(Color.decode("#EEEEEE"));
        txt_Protocolo.setEditable(false);
        rb_Reclamacao.setSelected(true);
    }
    
    public void setPosicao() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rb_grupo = new javax.swing.ButtonGroup();
        tipoPessoa = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        txt_Protocolo = new javax.swing.JTextField();
        txt_CPF = new javax.swing.JFormattedTextField();
        txt_CNPJ = new javax.swing.JFormattedTextField();
        btnBuscarPessoa = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_Descrição = new javax.swing.JTextPane();
        lbl_Descricao = new javax.swing.JLabel();
        lbl_Sobre = new javax.swing.JLabel();
        combo_Assunto = new javax.swing.JComboBox();
        lbl_Assunto = new javax.swing.JLabel();
        rb_Reclamacao = new javax.swing.JRadioButton();
        rb_Elogio = new javax.swing.JRadioButton();
        rb_Comentario = new javax.swing.JRadioButton();
        rb_Outros = new javax.swing.JRadioButton();
        btnNovoProtocolo = new javax.swing.JButton();
        btm_Salvar = new javax.swing.JButton();
        lbl_Protocolo = new javax.swing.JLabel();
        rbCPF = new javax.swing.JRadioButton();
        rbCNPJ = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDataNascimento = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtRazaoSocial = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Cadastrar Chamado");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jPanel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        MaskFormatter mascaracpf = null;
        try {
            txt_CPF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(mascaracpf = new MaskFormatter("###.###.###-##")));
            mascaracpf.setPlaceholderCharacter('_');
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_CPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_CPFActionPerformed(evt);
            }
        });

        MaskFormatter mascaracnpj = null;
        try {
            txt_CNPJ.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(mascaracnpj = new MaskFormatter("##.###.###/####-##")));
            mascaracnpj.setPlaceholderCharacter('_');
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_CNPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_CNPJActionPerformed(evt);
            }
        });

        btnBuscarPessoa.setBackground(new java.awt.Color(204, 204, 204));
        btnBuscarPessoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/br/metalurgicametodo/img/lupa.png"))); // NOI18N
        btnBuscarPessoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPessoaActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(txt_Descrição);

        lbl_Descricao.setText("Descrição:");

        lbl_Sobre.setText("Sobre:");

        combo_Assunto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "Produto", "Atendimento", "Entrega", "Outros" }));
        combo_Assunto.setCursor(new java.awt.Cursor(java.awt.Cursor.S_RESIZE_CURSOR));

        lbl_Assunto.setText("Assunto:");

        rb_grupo.add(rb_Reclamacao);
        rb_Reclamacao.setText("Reclamação");
        rb_Reclamacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_ReclamacaoActionPerformed(evt);
            }
        });

        rb_grupo.add(rb_Elogio);
        rb_Elogio.setText("Elogio");
        rb_Elogio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_ElogioActionPerformed(evt);
            }
        });

        rb_grupo.add(rb_Comentario);
        rb_Comentario.setText("Comentário");
        rb_Comentario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_ComentarioActionPerformed(evt);
            }
        });

        rb_grupo.add(rb_Outros);
        rb_Outros.setText("Outros");
        rb_Outros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rb_OutrosActionPerformed(evt);
            }
        });

        btnNovoProtocolo.setText("Novo Protocolo");
        btnNovoProtocolo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoProtocoloActionPerformed(evt);
            }
        });

        btm_Salvar.setText("Salvar");
        btm_Salvar.setEnabled(false);
        btm_Salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btm_SalvarActionPerformed(evt);
            }
        });

        lbl_Protocolo.setText("Protocolo:");

        tipoPessoa.add(rbCPF);
        rbCPF.setText("CPF: ");
        rbCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCPFActionPerformed(evt);
            }
        });

        tipoPessoa.add(rbCNPJ);
        rbCNPJ.setText("CNPJ: ");
        rbCNPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCNPJActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome: ");

        txtNome.setEditable(false);

        jLabel2.setText("Nascimento:");

        txtDataNascimento.setEditable(false);

        jLabel3.setText("Razão Social: ");

        txtRazaoSocial.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbCNPJ)
                    .addComponent(rbCPF))
                .addGap(418, 418, 418))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_Protocolo)
                            .addComponent(jLabel1))
                        .addGap(41, 41, 41)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(txt_Protocolo, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_CPF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscarPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtNome, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_CNPJ, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_Assunto)
                            .addComponent(lbl_Sobre)
                            .addComponent(lbl_Descricao))
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combo_Assunto, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(btnNovoProtocolo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btm_Salvar))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtRazaoSocial, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(rb_Reclamacao)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(rb_Elogio)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(rb_Comentario)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rb_Outros)))))
                .addContainerGap(38, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_Protocolo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbl_Protocolo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBuscarPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_CPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rbCPF)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_CNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbCNPJ))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtDataNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtRazaoSocial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Assunto)
                    .addComponent(rb_Reclamacao)
                    .addComponent(rb_Elogio)
                    .addComponent(rb_Comentario)
                    .addComponent(rb_Outros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_Sobre)
                    .addComponent(combo_Assunto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_Descricao)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNovoProtocolo)
                    .addComponent(btm_Salvar)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        setBounds(250, 110, 525, 527);
    }// </editor-fold>//GEN-END:initComponents
    // variavel que pega o nome dos radio button ao serem selecionados
    String nomeBotao = "";
    private void txt_CPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_CPFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_CPFActionPerformed

    private void btm_SalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btm_SalvarActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        //verifica se o botão de radio cpf esta selecionado
        if (rbCPF.isSelected()) {
            try {
                
                java.sql.Date data = null;

                data = new java.sql.Date(new Date().getTime());

                Atendimento atendimento = new Atendimento();
                PessoaFisica pessoaF = new PessoaFisica();
                PessoaFisicaDAO pessoaFisicaDAO = new PessoaFisicaDAO();
                //busca uma pessoa fisica atravez de seu cpf
                pessoaF = pessoaFisicaDAO.buscarCPF(txt_CPF.getText());
                // relaciona ela com esse atendimento
                atendimento.setPessoa(pessoaF.getPessoa());
                atendimento.setDescricao(txt_Descrição.getText());
                atendimento.setMotivo(String.valueOf(combo_Assunto.getSelectedItem()));
                atendimento.setTipoAssunto(nomeBotao);
                atendimento.setDataContato(data);
                atendimento.setTipoContato("telefone");
                atendimento.setSolucao("");
                atendimento.setStatus("EM ABERTO");
                Venda venda = new Venda();

                atendimento.setVenda(venda);
                //verifica se atendimento ficou com algumas informações vazias
                if (atendimento.getDescricao().equals("") || atendimento.getTipoAssunto().equalsIgnoreCase("selecione") || nomeBotao.equalsIgnoreCase("")) {
                    // exibe uma mensagem de erro caso o usuario deixa de preencher algum campo
                    JOptionPane.showMessageDialog(null, "Por Favor preencha o(s) campo(s) vazio(s)");
                } else {

                    AtendimentoDAO atendimentoDAO = new AtendimentoDAO();
                    //salva um atendimento
                    atendimentoDAO.save(atendimento);
                    //insere no campo protocolo, o novo protocolo da chamada
                    txt_Protocolo.setText(String.valueOf(atendimentoDAO.buscarCH()));
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                    // busca no banco e exibe uma mensagem pro usuario com o novo protocolo criado
                    JOptionPane.showMessageDialog(null, "Protocolo: " + atendimentoDAO.buscarCH());
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Erro ao inserir novo comentário");
            }
        } else if (rbCNPJ.isSelected()) {
            //verifica se botão de radio de cnpj esta selecionado
            try{
            java.sql.Date data = null;

            data = new java.sql.Date(new Date().getTime());
            
            Atendimento atendimento = new Atendimento();
            PessoaJuridica pessoaJ = new PessoaJuridica();
            PessoaJuridicaDAO pessoaJuridicaDAO = new PessoaJuridicaDAO();
            //busca uma pessoa juridica no banco atravez do campo de texto cnpj
            pessoaJ = pessoaJuridicaDAO.buscarCNPJ(txt_CNPJ.getText());
            //insere essa pessoa a um atendimento
            atendimento.setPessoa(pessoaJ.getPessoa());
            atendimento.setDescricao(txt_Descrição.getText());
            atendimento.setMotivo(String.valueOf(combo_Assunto.getSelectedItem()));
            atendimento.setTipoAssunto(nomeBotao);
            atendimento.setDataContato(data);
            atendimento.setTipoContato("telefone");
            atendimento.setSolucao("");
            atendimento.setStatus("EM ABERTO");
            Venda venda = new Venda();

            atendimento.setVenda(venda);
            //verifica se em atendimento existe alguma informação vazia
            if (atendimento.getDescricao().equals("") || atendimento.getTipoAssunto().equalsIgnoreCase("selecione") || nomeBotao.equalsIgnoreCase("")) {
                JOptionPane.showMessageDialog(null, "Por Favor preencha o(s) campo(s) vazio(s)");
            } else {
                AtendimentoDAO atendimentoDAO = new AtendimentoDAO();
                //salva atendimento
                atendimentoDAO.save(atendimento);
                txt_Protocolo.setText(String.valueOf(atendimentoDAO.buscarCH()));
                setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                //busca e exibe numero de protocolo para o usuario
                JOptionPane.showMessageDialog(null, "Protocolo: " + atendimentoDAO.buscarCH());
            }
        }catch(Exception e)
        {
            JOptionPane.showConfirmDialog(null, "Erro ao cadastrar chamado");
        }
        }
         setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btm_SalvarActionPerformed

    private void rb_OutrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_OutrosActionPerformed
        nomeBotao = rb_Outros.getText();
        System.out.println("" + nomeBotao);
    }//GEN-LAST:event_rb_OutrosActionPerformed

    private void txt_CNPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_CNPJActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_CNPJActionPerformed

    private void rbCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCPFActionPerformed
        txt_CPF.setText("");
        txt_CNPJ.setText("");
        txt_CPF.setEnabled(true);
        txt_CNPJ.setEnabled(false);
        txtRazaoSocial.setEnabled(false);
        btm_Salvar.setEnabled(false);
        txtDataNascimento.setEnabled(true);
        txtDataNascimento.setText("");
        txtNome.setText("");
        txtRazaoSocial.setText("");
        txt_Descrição.setText("");
        txt_Protocolo.setText("");
        rb_Reclamacao.setSelected(true);
        combo_Assunto.setSelectedIndex(0);
        

    }//GEN-LAST:event_rbCPFActionPerformed

    private void rbCNPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCNPJActionPerformed
        txt_CPF.setText("");
        txt_CNPJ.setText("");
        txt_CNPJ.setEnabled(true);
        txt_CPF.setEnabled(false);
        txtDataNascimento.setEnabled(false);
        txtRazaoSocial.setEnabled(true);
        txtDataNascimento.setText("");
        txtNome.setText("");
        txtRazaoSocial.setText("");
        txt_Descrição.setText("");
        txt_Protocolo.setText("");
        rb_Reclamacao.setSelected(true);
        combo_Assunto.setSelectedIndex(0);
    }//GEN-LAST:event_rbCNPJActionPerformed

    private void btnBuscarPessoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPessoaActionPerformed

        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        //verifica se o botão de radio cpf esta selecioando
        if (rbCPF.isSelected()) {
            //verifica se o campo de texto cpf esta vazio
            if (txt_CPF.getText().substring(0, 1).equals(" ") || txt_CPF.getText().substring(0, 1).equals("_")) {
                JOptionPane.showMessageDialog(null, "Por Favor insira um CPF!!");
            } else {
                try{
                PessoaFisica pessoaF = new PessoaFisica();
                PessoaFisicaDAO pessoaFisicaDAO = new PessoaFisicaDAO();
                //busca uma pessoa fisica atravez do campo de texto cpf
                pessoaF = pessoaFisicaDAO.buscarCPF(txt_CPF.getText());
                // compara se o objeto de Pessoa Fisica está vazio
                if (pessoaF != null) {
                    //insere informaçoes do cliente em campos de texto
                    SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
                    Date data = (Date) (pessoaF.getDataNascimento());

                    txtNome.setText(pessoaF.getPessoa().getNome());
                    txtDataNascimento.setText(format.format(data));
                    //habilita o botão salvar
                    btm_Salvar.setEnabled(true);
                    
                    setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
                } else {
                    JOptionPane.showMessageDialog(null, "CPF não encontrado!!!!");
                }
                }catch(Exception e)
                {
                    JOptionPane.showMessageDialog(null, "Erro ao buscar pessoa!!");
                }
            }
            //verifica se o botão de radio cnpj esta selecionado
        } else if (rbCNPJ.isSelected()) {
            //verifica se o campo cnpj esta vazio
            if (txt_CNPJ.getText().substring(0, 1).equals(" ") || txt_CNPJ.getText().substring(0, 1).equals("_")) {
                JOptionPane.showMessageDialog(null, "Por Favor insira um CNPJ");
            } else {
                try{
                PessoaJuridica pessoaJ = new PessoaJuridica();
                PessoaJuridicaDAO pessoaJDAO = new PessoaJuridicaDAO();
                //busca uma pessoa juridica atravez do campo cnpj
                pessoaJ = pessoaJDAO.buscarCNPJ(txt_CNPJ.getText());
                // verifica se o objeto de pessoa juridica não esta vazio
                if (pessoaJ != null) {
                    //insere informaçoes do cliente nos campos de texto
                    txtNome.setText(pessoaJ.getPessoa().getNome());
                    txtRazaoSocial.setText(pessoaJ.getRazaoSocial());
                    //habilita o botão salvar
                    btm_Salvar.setEnabled(true);
                } else {
                    JOptionPane.showMessageDialog(null, "CNPJ não encontrado!!");
                }
                }catch(Exception e)
                {
                    JOptionPane.showMessageDialog(null, "Erro ao buscar empresa!!");
                }
            }
        }
        setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnBuscarPessoaActionPerformed

    private void rb_ReclamacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_ReclamacaoActionPerformed
        nomeBotao = rb_Reclamacao.getText();
        System.out.println("" + nomeBotao);
    }//GEN-LAST:event_rb_ReclamacaoActionPerformed

    private void rb_ElogioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_ElogioActionPerformed
        nomeBotao = rb_Elogio.getText();
        System.out.println("" + nomeBotao);
    }//GEN-LAST:event_rb_ElogioActionPerformed

    private void rb_ComentarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rb_ComentarioActionPerformed
        nomeBotao = rb_Comentario.getText();
        System.out.println("" + nomeBotao);
    }//GEN-LAST:event_rb_ComentarioActionPerformed

    private void btnNovoProtocoloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoProtocoloActionPerformed
        txt_Protocolo.setText("");
        txt_CPF.setText("");
        txt_CNPJ.setText("");
        txtDataNascimento.setText("");
        txtNome.setText("");
        txtRazaoSocial.setText("");
        txt_Descrição.setText("");
        rb_Reclamacao.setSelected(true);
        combo_Assunto.setSelectedIndex(0);
        btm_Salvar.setEnabled(false);

    }//GEN-LAST:event_btnNovoProtocoloActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btm_Salvar;
    private javax.swing.JButton btnBuscarPessoa;
    private javax.swing.JButton btnNovoProtocolo;
    private javax.swing.JComboBox combo_Assunto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbl_Assunto;
    private javax.swing.JLabel lbl_Descricao;
    private javax.swing.JLabel lbl_Protocolo;
    private javax.swing.JLabel lbl_Sobre;
    private javax.swing.JRadioButton rbCNPJ;
    private javax.swing.JRadioButton rbCPF;
    private javax.swing.JRadioButton rb_Comentario;
    private javax.swing.JRadioButton rb_Elogio;
    private javax.swing.JRadioButton rb_Outros;
    private javax.swing.JRadioButton rb_Reclamacao;
    private javax.swing.ButtonGroup rb_grupo;
    private javax.swing.ButtonGroup tipoPessoa;
    private javax.swing.JTextField txtDataNascimento;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtRazaoSocial;
    private javax.swing.JFormattedTextField txt_CNPJ;
    private javax.swing.JFormattedTextField txt_CPF;
    private javax.swing.JTextPane txt_Descrição;
    private javax.swing.JTextField txt_Protocolo;
    // End of variables declaration//GEN-END:variables
}
